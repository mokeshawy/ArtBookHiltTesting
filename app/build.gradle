plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {

    useLibrary("android.test.runner")
    useLibrary("android.test.base")
    useLibrary("android.test.mock")

    compileSdk 31

    defaultConfig {
        applicationId "com.example.artbookhilttesting"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.example.artbookhilttesting.HiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        //noinspection DataBindingWithoutKapt
        dataBinding true
    }

    hilt {
        enableTransformForLocalTests = true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'


    // TestImplementations //
    implementation "androidx.test:core:1.4.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.test:runner:1.4.0"
    implementation "androidx.test:rules:1.4.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.4"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'org.mockito:mockito-core:3.8.0'


    // Hilt Test..
    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    // ...with Kotlin.
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.38.1'

    // Android Test Implementations //
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    debugImplementation 'androidx.fragment:fragment-testing:1.3.6'
    // Core library
    androidTestImplementation('androidx.test:core:1.4.0')

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation('androidx.test:runner:1.4.0')
    androidTestImplementation('androidx.test:rules:1.4.0')

    // Assertions
    androidTestImplementation('androidx.test.ext:junit:1.1.3')
    androidTestImplementation('androidx.test.ext:truth:1.4.0')
    androidTestImplementation('com.google.truth:truth:1.1.3')

    // Espresso dependencies
    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0')
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.4.0')
    androidTestImplementation('androidx.test.espresso:espresso-intents:3.4.0')
    androidTestImplementation('androidx.test.espresso:espresso-accessibility:3.4.0')
    androidTestImplementation('androidx.test.espresso:espresso-web:3.4.0')
    androidTestImplementation('androidx.test.espresso.idling:idling-concurrent:3.4.0')

    // Mockito...
    androidTestImplementation 'org.mockito:mockito-android:3.8.0'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation('androidx.test.espresso:espresso-idling-resource:3.4.0')
    androidTestImplementation 'com.google.android.apps.common.testing.accessibility.framework:accessibility-test-framework:3.1.2'

    //hamcrest
    androidTestImplementation "org.hamcrest:hamcrest:2.2"


    // Navigation component.
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0-rc01"

    //ViewModels delegation extensions for activity
    implementation 'androidx.activity:activity-ktx:1.3.1'

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1'

    // circleImageview
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


    // hilt implementation.
    implementation 'com.google.dagger:hilt-android:2.38.1'
    kapt 'com.google.dagger:hilt-android-compiler:2.38.1'
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    //hilt view model.
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"

    // Room Data Base
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"


    // picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    

}